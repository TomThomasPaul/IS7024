@page
@using Newtonsoft.Json
@using Newtonsoft.Json.Linq;

@model IndexModel
@{
    ViewData["Title"] = "Home page";
    var likedRecipes = (List<JObject>)ViewData["LikedRecipes"];





}

@section Styles {

    <link rel="stylesheet" href="~/css/customStyle.css" />
}



@{
    var iconString = "icon-heart-outlined";
    @if (likedRecipes != null)
    {
        var currentRecipeId = Model.Recipe.RecipeId;
        var likedRecipe = likedRecipes.Find(recipe => recipe["id"].ToString().Equals(currentRecipeId));
        if (likedRecipe != null) { iconString = "icon-heart"; };
    }
    }

    <html>

    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <meta http-equiv="X-UA-Compatible" content="ie=edge">
        <link href="https://fonts.googleapis.com/css?family=Nunito+Sans:400,600,700" rel="stylesheet">
        @*<link rel="stylesheet" href="css/style.css">*@
        <link rel="shortcut icon" href="img/favicon.png" type="image/x-icon">
        <title>MomsSpaghetti</title>
    </head>

        <div class="_container">
            <header class="header">
                <img src="img/logo.png" alt="Logo" class="header__logo">
                <form class="search" method="post">
                    <input type="text" class="search__field" asp-for="SearchRecipes.Query" placeholder="Search over 1,000,000 recipes...">
                    <button class="btn search__btn" type="submit">
                        <svg class="search__icon">
                            <use href="img/icons.svg#icon-magnifying-glass"></use>
                        </svg>
                        <span>Search</span>
                    </button>

                </form>

                <div class="likes">
                    <div class="likes__field">
                        <svg class="likes__icon">
                            <use href="img/icons.svg#icon-heart"></use>
                        </svg>
                    </div>
                    @if (likedRecipes != null)
                    {
                        <div class="likes__panel">
                            <ul class="likes__list">

                                @foreach (var recipe in likedRecipes)
                                {
                                    <li>
                                        <a class="likes__link" href="#@recipe["id"]">
                                            <figure class="likes__fig">
                                                <img src="@recipe["image"]" alt="Recipe">
                                            </figure>
                                            <div class="likes__data">
                                                <h4 class="likes__name">@recipe["title"]</h4>
                                                <p class="likes__author">@recipe["author"]</p>
                                            </div>
                                        </a>
                                    </li>
                                }

                            </ul>
                        </div>
                    }







                    <div class="results">
                        <ul class="results__list">

                            @{if (Model.SearchRecipes.Result != null)
                                {


                                    @*

                            var props = Model.SearchRecipes.Result.Properties();
                            var propsArray = props.ToArray();
                            var first = propsArray[1].Value[0]["title"];

                        <h1>@Model.SearchRecipes.Result["recipes"][0]["title"]</h1>
                        <h1>@Model.SearchRecipes.Result["recipes"][1]["title"]</h1>
                                    *@

                                    foreach (var recipe in Model.SearchRecipes.Result["recipes"])
                                    {
                                        <li>
                                            <a class="results__link results__link--active" href="?recipeId=@recipe["recipe_id"]">
                                                <figure class="results__fig">
                                                    <img src="@recipe["image_url"]" alt="Recipe">
                                                </figure>
                                                <div class="results__data">
                                                    <h4 class="results__name">@recipe["title"]</h4>
                                                    <p class="results__author">@recipe["author"]</p>
                                                </div>
                                            </a>
                                        </li>
                                    }


                                }


                            }

                        </ul>


                        <div class="results__pages">
                            <!--
            <button class="btn-inline results__btn--prev">
                <svg class="search__icon">
                    <use href="img/icons.svg#icon-triangle-left"></use>
                </svg>
                <span>Page 1</span>
            </button>
            <button class="btn-inline results__btn--next">
                <span>Page 3</span>
                <svg class="search__icon">
                    <use href="img/icons.svg#icon-triangle-right"></use>
                </svg>
            </button>
            -->
                        </div>
                    </div>

                    <div class="recipe">
                        @if (Model.Recipe.Title != null)
                        {






                            <figure class="recipe__fig">
                                <img src="@Model.Recipe.Image" alt="@Model.Recipe.Image" class="recipe__img">
                                <h1 class="recipe__title">
                                    <span>@Model.Recipe.Title</span>
                                </h1>
                            </figure>
                            <div class="recipe__details">
                                <div class="recipe__info">
                                    <svg class="recipe__info-icon">
                                        <use href="img/icons.svg#icon-stopwatch"></use>
                                    </svg>
                                    <span class="recipe__info-data recipe__info-data--minutes">45</span>
                                    <span class="recipe__info-text"> minutes</span>
                                </div>
                                <div class="recipe__info">
                                    <svg class="recipe__info-icon">
                                        <use href="img/icons.svg#icon-man"></use>
                                    </svg>
                                    <span class="recipe__info-data recipe__info-data--people">4</span>
                                    <span class="recipe__info-text"> servings</span>

                                    <div class="recipe__info-buttons">
                                        <button class="btn-tiny">
                                            <svg>
                                                <use href="img/icons.svg#icon-circle-with-minus"></use>
                                            </svg>
                                        </button>
                                        <button class="btn-tiny">
                                            <svg>
                                                <use href="img/icons.svg#icon-circle-with-plus"></use>
                                            </svg>
                                        </button>
                                    </div>

                                </div>

                                <button class="recipe__love">
                                    <svg class="header__likes">
                                        <use href="img/icons.svg#@iconString"></use>
                                    </svg>
                                </button>
                            </div>


                            <div class="recipe__ingredients">
                                <ul class="recipe__ingredient-list">
                                    @if (Model.Recipe.Ingredients != null)
                                    {

                                        @foreach (var ingredient in Model.Recipe.Ingredients)
                                        {
                                            <li class="recipe__item">
                                                <svg class="recipe__icon">
                                                    <use href="img/icons.svg#icon-check"></use>
                                                </svg>
                                                <div class="recipe__count">2</div>
                                                <div class="recipe__ingredient">
                                                    <span class="recipe__unit">g</span>
                                                    pizza
                                                </div>
                                            </li>

                                        }

                                    }





                                </ul>




                                <button class="btn-small recipe__btn">
                                    <svg class="search__icon">
                                        <use href="img/icons.svg#icon-shopping-cart"></use>
                                    </svg>
                                    <span>Add to shopping list</span>
                                </button>
                            </div>

                            <div class="recipe__directions">
                                <h2 class="heading-2">How to cook it</h2>
                                <p class="recipe__directions-text">
                                    This recipe was carefully designed and tested by
                                    <span class="recipe__by">@Model.Recipe.Author</span>. Please check out directions at their website.
                                </p>
                                <a class="btn-small recipe__btn" href="@Model.Recipe.Url" target="_blank">
                                    <span>Directions</span>
                                    <svg class="search__icon">
                                        <use href="img/icons.svg#icon-triangle-right"></use>
                                    </svg>

                                </a>
                            </div>













                        }


                    </div>



                    <div class="shopping">
                        <h2 class="heading-2">My Shopping List</h2>

                        <ul class="shopping__list">

                            <!--
            <li class="shopping__item">
                <div class="shopping__count">
                    <input type="number" value="500" step="100">
                    <p>g</p>
                </div>
                <p class="shopping__description">Pasta</p>
                <button class="shopping__delete btn-tiny">
                    <svg>
                        <use href="img/icons.svg#icon-circle-with-cross"></use>
                    </svg>
                </button>
            </li>

            <li class="shopping__item">
                <div class="shopping__count">
                    <input type="number" value="0.5" step="0.1">
                    <p>cup</p>
                </div>
                <p class="shopping__description">Ricotta cheese</p>
                <button class="shopping__delete btn-tiny">
                    <svg>
                        <use href="img/icons.svg#icon-circle-with-cross"></use>
                    </svg>
                </button>
            </li>

            <li class="shopping__item">
                <div class="shopping__count">
                    <input type="number" value="3.5" step="0.1">
                    <p>tbsp</p>
                </div>
                <p class="shopping__description">Toasted almond slices</p>
                <button class="shopping__delete btn-tiny">
                    <svg>
                        <use href="img/icons.svg#icon-circle-with-cross"></use>
                    </svg>
                </button>
            </li>

            <li class="shopping__item">
                <div class="shopping__count">
                    <input type="number" value="0.5" step="0.1">
                    <p>tbsp</p>
                </div>
                <p class="shopping__description">Sea salt</p>
                <button class="shopping__delete btn-tiny">
                    <svg>
                        <use href="img/icons.svg#icon-circle-with-cross"></use>
                    </svg>
                </button>
            </li>

            <li class="shopping__item">
                <div class="shopping__count">
                    <input type="number" value="0.25" step="0.1">
                    <p>cup</p>
                </div>

                <p class="shopping__description">Minced green onions</p>
                <button class="shopping__delete btn-tiny">
                    <svg>
                        <use href="img/icons.svg#icon-circle-with-cross"></use>
                    </svg>
                </button>
            </li>

            <li class="shopping__item">
                <div class="shopping__count">
                    <input type="number" value="45" step="10">
                    <p>g</p>
                </div>
                <p class="shopping__description">Sesame seeds</p>
                <button class="shopping__delete btn-tiny">
                    <svg>
                        <use href="img/icons.svg#icon-circle-with-cross"></use>
                    </svg>
                </button>
            </li>
            -->
                        </ul>

                        <div class="copyright">
                            &copy; MomsSpaghetti

                        </div>

                    </div>




                    @section Scripts{


                        <script>
                    var isLiked = false;
                    var likesArray = [];
                       //

                    $.fn.toggleLikeBtn = function (isLiked) {
                        let iconString = isLiked ? 'icon-heart' : 'icon-heart-outlined';

                        $(`.recipe__love use`).attr('href', `img/icons.svg#${iconString}`);


                    };
                    $.fn.addLike = function () {
                       // if(likes.length==0) {

                        console.log("begginning of addlike");
                        var likedRecipeId = `@Model.Recipe.RecipeId`;
                        var  likedImage= `@Model.Recipe.Image`;
                        var likedAuthor = `@Model.Recipe.Author`;
                        var likedTitle = `@Model.Recipe.Title`;

                        var newLike = {

                            id: likedRecipeId,
                            image: likedImage,
                            author: likedAuthor,
                            title: likedTitle

                        }

                            //var newLike = `@Model.Recipe`;
                           // console.log(newLike);
                          // likes[likes.length] = newLike;
                            //console.log(likes);
                        $.ajax({
                            type: "POST",
                            url: "/Index?handler=Send",
                            beforeSend: function (xhr) {
                                xhr.setRequestHeader("XSRF-TOKEN",
                                    $('input:hidden[name="__RequestVerificationToken"]').val());
                            },
                            data: JSON.stringify(newLike),
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (response) {
                                console.log(response);
                                var responseObjectArray = JSON.parse(response);
                                likesArray = responseObjectArray;
                                console.log(responseObjectArray);
                                console.log("inside addlike");
                               // var dvItems = $(".likes__list");
                                //dvItems.empty();
                                //$.each(response, function (i, item) {
                                //   // var $tr = $('<li>').append(item).appendTo(dvItems);
                                //    $.fn.renderLike(item);

                                //});
                                //for (var i = 0; i < responseObjectArray.length; i++) {

                                //    $.fn.renderLike(responseObjectArray[i]);
                                //}

                                $.fn.renderLike(responseObjectArray[responseObjectArray.length - 1]);
                                $.fn.toggleLikeBtn(true);
                            },
                            failure: function (response) {
                                alert(response);
                            }
                        });

                        console.log("end of addlike");
                            return newLike;


                      //  }


                    };
                    $.fn.renderLike = function (like) {
                        console.log(like.id);
                        console.log("inside renderLike");
                        var markup = `<li>
                            <a class="likes__link" href="#${like.id}">
                                <figure class="likes__fig">
                                    <img src="${like.image}" alt="${like.title}">
                                </figure>
                                <div class="likes__data">
                                    <h4 class="likes__name">${like.title}</h4>
                                    <p class="likes__author">${like.author}</p>
                                </div>
                            </a>
                        </li>`;





                        $(".likes__list").append(markup);
                       // alert("inside render like");

                    };

                    $.fn.deleteLike = function (likeFound) {
                        console.log("entered delete like");
                        $.ajax({
                            type: "POST",
                            url: "/Index?handler=DeleteLiked",
                            beforeSend: function (xhr) {
                                xhr.setRequestHeader("XSRF-TOKEN",
                                    $('input:hidden[name="__RequestVerificationToken"]').val());
                            },
                            data: JSON.stringify(likeFound),
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (response) {
                               // console.log(response);
                                var responseObjectArray = JSON.parse(response);
                               // console.log(responseObjectArray);
                               // console.log("inside addlike");
                                // var dvItems = $(".likes__list");
                                //dvItems.empty();
                                //$.each(response, function (i, item) {
                                //   // var $tr = $('<li>').append(item).appendTo(dvItems);
                                //    $.fn.renderLike(item);

                                //});
                                $(".likes__list").empty();
                                for (var i = 0; i < responseObjectArray.length; i++) {

                                    $.fn.renderLike(responseObjectArray[i]);
                                }
                                $.fn.toggleLikeBtn(false);
                               // $.fn.renderLike(responseObjectArray[responseObjectArray.length - 1]);
                            },
                            failure: function (response) {
                                //alert(response);
                            }
                        });



                    };



                    $(document).ready(function () {

                        var likesIdArray = [];
                        //var recipe = ;
                        //console.log(recipe.RecipeId);

                        //$.fn.toggleLikeBtn(isLiked);
                        $(".recipe__love").click(function () {




                            isLiked = !isLiked;

                                @*@{



                                    var alreadyLiked = false;
                                    var recipeId = Model.Recipe.RecipeId;
                                    <text>console.log("inside razor js");</text>;
                                    <text>console.log(@likedRecipes);</text>;

                                    @if (likedRecipes != null)
                                    {
                                        <text>console.log("inside liked recipes not null");</text>
                                        foreach (var recipe in likedRecipes)
                                        {
                                            if (recipe["id"].Equals(recipeId))
                                            {
                                                alreadyLiked = true;


                                            }

                                        }
                                    }
                                    if (!alreadyLiked)
                                    {

                                   <text>
                            console.log("gonna add new like");

                                   </text>


                                    }





                                 }*@



                            //console.log(recipe);
                            //call ajax to check if recipe already liked
                            $.ajax({
                                type: "GET",
                                url: "/Index?handler=Liked",
                                data: {"recipeId" : `@Model.Recipe.RecipeId` },
                                contentType: "application/x-www-form-urlencoded",
                                dataType: "json",
                                success: function (response) {
                                    console.log(response);

                                    if (response == "false") {
                                        var newLike = $.fn.addLike();
                                        likesIdArray.push(newLike.id);

                                    } else {

                                        $.fn.deleteLike(JSON.parse(response));
                                    }
                                    //var dvItems = $("#dvItems");
                                    //dvItems.empty();
                                    //$.each(response, function (i, item) {
                                    //    var $tr = $('<li>').append(item).appendTo(dvItems);
                                   // });
                                },
                                failure: function (response) {
                                    alert(response);
                                }
                            });



                           // $.fn.toggleLikeBtn(isLiked);
                           // $.fn.renderLike(newLike);

                        });





                            //var person = {};
                            //person.Name = $("#txtName").val();
                            //$.ajax({
                            //    type: "POST",
                            //    url: "/Home/AjaxMethod",
                            //    data: '{person: ' + JSON.stringify(person) + '}',
                            //    contentType: "application/json; charset=utf-8",
                            //    dataType: "json",
                            //    success: function (response) {
                            //        alert("Hello: " + response.Name + ".\nCurrent Date and Time: " + response.DateTime);
                            //    },
                            //    failure: function (response) {
                            //        alert(response.responseText);
                            //    },
                            //    error: function (response) {
                            //        alert(response.responseText);
                            //    }
                            //});




                    })


                        </script>
                    }











                    }
